{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactItem/ContactItem.module.css","components/ContactsList/ContactsList.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactsList/ContactsList.js","App.js","index.js"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","nameId","useRef","numberId","useEffect","current","uuidv4","handleInputChange","e","currentTarget","value","resetForm","className","s","form","preventDefault","addedContact","id","label","htmlFor","input","type","pattern","title","required","onChange","btn","Filter","filterInputId","filter","ContactItem","toDelContact","item","tel","onClick","ContactsList","contacts","list","map","App","JSON","parse","localStorage","getItem","setContacts","setFilter","setItem","stringify","getVisibleContacts","filterNormalize","toLowerCase","contact","includes","data","find","alert","prevContacts","length","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70a48698.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1ejIW\",\"input\":\"ContactForm_input__21RFx\",\"label\":\"ContactForm_label__Ez_8F\",\"btn\":\"ContactForm_btn__1cmr7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1nbtc\",\"label\":\"Filter_label__2d3RH\",\"input\":\"Filter_input__N2pb1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__1L9mb\",\"tel\":\"ContactItem_tel__7m9bq\",\"btn\":\"ContactItem_btn__1NriN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__GvFDC\"};","import { useState, useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const nameId = useRef(\"\");\r\n  const numberId = useRef(\"\");\r\n\r\n  useEffect(() => {\r\n    nameId.current = uuidv4();\r\n    numberId.current = uuidv4();\r\n  }, []);\r\n\r\n  const handleInputChange = (e) => {\r\n    switch (e.currentTarget.name) {\r\n      case \"name\":\r\n        setName(e.currentTarget.value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(e.currentTarget.value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleAddContact = (e) => {\r\n    e.preventDefault();\r\n\r\n    const addedContact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    onSubmit(addedContact);\r\n    resetForm();\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={s.form}\r\n      onSubmit={handleAddContact}\r\n      name=\"adding_contacts_form\"\r\n    >\r\n      <label className={s.label} htmlFor={nameId.current}>\r\n        Name\r\n      </label>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        value={name}\r\n        id={nameId.current}\r\n        onChange={handleInputChange}\r\n      />\r\n\r\n      <label className={s.label} htmlFor={numberId.current}>\r\n        Number\r\n      </label>\r\n      <input\r\n        className={s.input}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n        value={number}\r\n        id={numberId.current}\r\n        onChange={handleInputChange}\r\n      />\r\n\r\n      <button className={s.btn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nfunction Filter({ onChange, value }) {\r\n  const filterInputId = uuidv4();\r\n\r\n  return (\r\n    <div className={s.filter}>\r\n      <label className={s.label} htmlFor={filterInputId}>\r\n        Find contacts by name:\r\n      </label>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        id={filterInputId}\r\n        onChange={onChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func,\r\n  value: PropTypes.string,\r\n};\r\n","import s from \"./ContactItem.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ContactItem({ id, name, number, toDelContact }) {\r\n  return (\r\n    <li className={s.item}>\r\n      {name}: <span className={s.tel}>{number}</span>\r\n      <button\r\n        className={s.btn}\r\n        onClick={() => {\r\n          toDelContact(id);\r\n        }}\r\n        type=\"button\"\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ContactItem;\r\n\r\nContactItem.propTypes = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  toDelContact: PropTypes.func,\r\n};\r\n","import ContactItem from \"../ContactItem/ContactItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactsList.module.css\";\r\n\r\nfunction ContactsList({ contacts, toDelContact }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactItem\r\n          key={id}\r\n          id={id}\r\n          name={name}\r\n          number={number}\r\n          toDelContact={toDelContact}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ContactsList;\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array,\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport ContactForm from \"./components/ContactForm/ContactForm\";\r\nimport Filter from \"./components/Filter/Filter\";\r\nimport ContactsList from \"./components/ContactsList/ContactsList.js\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [contacts, setContacts] = useState(\r\n    JSON.parse(localStorage.getItem(\"contacts\")) ?? []\r\n  );\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const onSubmitContactForm = (data) => {\r\n    if (contacts.find((contact) => contact.name === data.name)) {\r\n      alert(`${data.name} is already in contacts.`);\r\n    } else setContacts((prevContacts) => [data, ...prevContacts]);\r\n  };\r\n\r\n  const toDelContact = (contactId) => {\r\n    setContacts(contacts.filter((contact) => contact.id !== contactId));\r\n  };\r\n\r\n  const handleContactsFilter = (e) => {\r\n    setFilter(e.currentTarget.value);\r\n  };\r\n\r\n  const getVisibleContacts = () => {\r\n    // console.log(\"abcdef\".includes(\"\")); // Проверка\r\n    const filterNormalize = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filterNormalize)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Phonebook</h1>\r\n      <ContactForm onSubmit={onSubmitContactForm} />\r\n      <h2 className=\"listTitle\">Contacts</h2>\r\n      <Filter onChange={handleContactsFilter} value={filter} />\r\n      {getVisibleContacts().length === 0 ? (\r\n        <p className=\"notifyText\">\r\n          {filter.length > 0 ? \"No results for your search\" : \"No contacts yet\"}\r\n        </p>\r\n      ) : (\r\n        <ContactsList\r\n          contacts={getVisibleContacts()}\r\n          toDelContact={toDelContact}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}