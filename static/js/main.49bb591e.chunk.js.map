{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactItem/ContactItem.module.css","components/ContactsList/ContactsList.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactsList/ContactsList.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","inputNameId","uuidv4","inputNumberId","handleInputChange","e","currentTarget","value","setState","handleAddContact","preventDefault","addedContact","id","props","onSubmit","resetContactForm","className","s","form","this","label","htmlFor","input","type","pattern","title","required","inputId","onChange","btn","Component","Filter","filterInputId","filter","ContactItem","toDelContact","item","tel","onClick","ContactsList","contacts","list","map","App","onSubmitContactForm","data","find","contact","alert","handleContactsFilter","getVisibleContacts","filterNormalize","toLowerCase","includes","contactId","visibleContacts","length","handleClickDelContact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49bb591e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1NAA4\",\"input\":\"ContactForm_input__3ZVlu\",\"label\":\"ContactForm_label__C_7aT\",\"btn\":\"ContactForm_btn__375OW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1ESpr\",\"label\":\"Filter_label__1FSOT\",\"input\":\"Filter_input__1vD--\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__pQZ-0\",\"tel\":\"ContactItem_tel__3wngr\",\"btn\":\"ContactItem_btn__1JPcz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__2nvMT\"};","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  inputNameId = uuidv4();\r\n  inputNumberId = uuidv4();\r\n\r\n  handleInputChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleAddContact = (e) => {\r\n    e.preventDefault();\r\n    const addedContact = {\r\n      id: uuidv4(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n    // console.log(this.state.name);\r\n    this.props.onSubmit(addedContact);\r\n\r\n    this.resetContactForm();\r\n  };\r\n\r\n  resetContactForm = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        className={s.form}\r\n        onSubmit={this.handleAddContact}\r\n        name=\"adding_contacts_form\"\r\n      >\r\n        <label className={s.label} htmlFor={this.inputNameId}>\r\n          Name\r\n        </label>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={this.state.name}\r\n          id={this.inputId}\r\n          onChange={this.handleInputChange}\r\n        />\r\n\r\n        <label className={s.label} htmlFor={this.inputNumberId}>\r\n          Number\r\n        </label>\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={this.state.number}\r\n          id={this.inputNumberId}\r\n          onChange={this.handleInputChange}\r\n        />\r\n\r\n        <button className={s.btn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default ContactForm;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nfunction Filter({ onChange, value }) {\r\n  const filterInputId = uuidv4();\r\n  return (\r\n    <div className={s.filter}>\r\n      <label className={s.label} htmlFor={filterInputId}>\r\n        Find contacts by name:\r\n      </label>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        id=\"filterInputId\"\r\n        onChange={onChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import s from \"./ContactItem.module.css\";\r\n\r\nfunction ContactItem({ id, name, number, toDelContact }) {\r\n  return (\r\n    <li className={s.item}>\r\n      {name}: <span className={s.tel}>{number}</span>\r\n      <button\r\n        className={s.btn}\r\n        onClick={() => {\r\n          toDelContact(id);\r\n        }}\r\n        type=\"button\"\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ContactItem;\r\n","import ContactItem from \"../ContactItem/ContactItem\";\r\nimport s from \"./ContactsList.module.css\";\r\n\r\nfunction ContactsList({ contacts, toDelContact }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactItem\r\n          key={id}\r\n          id={id}\r\n          name={name}\r\n          number={number}\r\n          toDelContact={toDelContact}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ContactsList;\r\n","import React, { Component } from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactsList from \"./components/ContactsList/ContactsList.js\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n    // contacts: [\n    //   { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    //   { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    //   { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    //   { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    // ],\n  };\n\n  onSubmitContactForm = (data) => {\n    if (this.state.contacts.find((contact) => contact.name === data.name)) {\n      alert(`${data.name} is already in contacts.`);\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [data, ...contacts],\n      }));\n    }\n  };\n\n  handleContactsFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    // console.log(\"abcdef\".includes(\"\")); // Проверка\n    const { filter, contacts } = this.state;\n    const filterNormalize = filter.toLowerCase();\n    return contacts.filter((contact) => {\n      return contact.name.toLowerCase().includes(filterNormalize);\n    });\n  };\n\n  toDelContact = (contactId) => {\n    // this.setState((prevState) => ({\n    //   contacts: prevState.contacts.filter((contact) => {\n    //     return contact.id !== contactId;\n    //   }),\n    // }));\n    this.setState({\n      contacts: this.state.contacts.filter((contact) => {\n        return contact.id !== contactId;\n      }),\n    });\n  };\n\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.onSubmitContactForm} />\n        <h2 className=\"listTitle\">Contacts</h2>\n        <Filter\n          onChange={this.handleContactsFilter}\n          value={this.state.filter}\n        />\n        {visibleContacts.length === 0 && this.state.filter.length > 0 ? (\n          <p className=\"notifyText\">No results for your search</p>\n        ) : (\n          <ContactsList\n            contacts={visibleContacts}\n            onClick={this.handleClickDelContact}\n            toDelContact={this.toDelContact}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}