{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactItem/ContactItem.module.css","components/ContactsList/ContactsList.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactsList/ContactsList.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactsError","delContactsRequest","delContactsSuccess","delContactsError","filterContacts","axios","defaults","baseURL","getItems","state","contacts","items","getFilter","filter","getLoading","loading","getError","error","getVisibleContacts","createSelector","filterNormalize","toLowerCase","trim","name","includes","ContactForm","useState","setName","number","setNumber","isLoading","useSelector","nameId","useRef","numberId","currentContacts","dispatch","useDispatch","useEffect","current","uuidv4","handleInputChange","e","currentTarget","value","toAddContact","isSubmitForm","contact","post","then","data","toast","success","console","log","catch","addContact","className","s","form","onSubmit","preventDefault","find","label","htmlFor","input","type","pattern","title","required","id","onChange","box","btn","disabled","color","height","width","Filter","filterInputId","event","autoComplete","ContactItem","isBtnLoader","setIsBtnLoader","toDelContact","contactId","contactName","delete","item","tel","onClick","ContactsList","visibleContacts","list","map","App","isContactsLoading","Error","get","length","position","reverseOrder","gutter","toastOptions","duration","style","background","itemsReducer","createReducer","_","payload","reverse","loadingReducer","errorReducer","message","filterReducer","action","contactsReducer","combineReducers","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81f28731.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__m09Qc\",\"label\":\"Filter_label__2TVyZ\",\"input\":\"Filter_input__1eTzD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__3veW5\",\"tel\":\"ContactItem_tel__3kUkN\",\"btn\":\"ContactItem_btn__2937y\",\"loader\":\"ContactItem_loader__kArjO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__2viaN\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const fetchContactsRequest = createAction(\n  \"contacts/fetchContactsRequest\"\n);\nexport const fetchContactsSuccess = createAction(\n  \"contacts/fetchContactsSuccess\"\n);\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\n\nexport const addContactsRequest = createAction(\"contacts/addContactsRequest\");\nexport const addContactsSuccess = createAction(\"contacts/addContactsSuccess\");\nexport const addContactsError = createAction(\"contacts/addContactsError\");\n\nexport const delContactsRequest = createAction(\"contacts/delContactsRequest\");\nexport const delContactsSuccess = createAction(\"contacts/delContactsSuccess\");\nexport const delContactsError = createAction(\"contacts/delContactsError\");\n\nexport const filterContacts = createAction(\"contacts/filter\");\n","import axios from \"axios\";\nimport toast from \"react-hot-toast\";\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  delContactsRequest,\n  delContactsSuccess,\n  delContactsError,\n} from \"./contacts-actions\";\n\naxios.defaults.baseURL = \"http://localhost:4140\";\n\nexport const fetchContacts = () => (dispatch) => {\n  dispatch(fetchContactsRequest());\n\n  axios\n    .get(\"/contacts\")\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch((error) => dispatch(fetchContactsError(error)));\n};\n\nexport const addContact = (name, number, isSubmitForm) => (dispatch) => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactsRequest());\n\n  axios\n    .post(\"/contacts\", contact)\n    .then(({ data }) => {\n      toast.success(`Contact ${name} successfully added.`);\n      console.log(\"Нужно убрать лоадер\");\n      console.log(isSubmitForm);\n      dispatch(addContactsSuccess(data));\n    })\n    .catch((error) => dispatch(addContactsError(error)));\n};\n\nexport const delContact = (contactId, contactName) => (dispatch) => {\n  dispatch(delContactsRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => {\n      toast.success(`Contact ${contactName} successfully deleted.`);\n      dispatch(delContactsSuccess(contactId));\n    })\n    .catch((error) => dispatch(delContactsError(error)));\n};\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getItems = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\nexport const getLoading = (state) => state.contacts.loading;\nexport const getError = (state) => state.contacts.error;\n\n// export const getVisibleContacts = (state) => {\n//   const filterValue = getFilter(state);\n//   const contactsList = getItems(state);\n//   const filterValueNormalize = filterValue.toLowerCase().trim(\" \");\n\n//   return contactsList.filter(({ name }) =>\n//     name.toLowerCase().includes(filterValueNormalize)\n//   );\n// };\n\nexport const getVisibleContacts = createSelector(\n  [getItems, getFilter],\n  (items, filter) => {\n    const filterNormalize = filter.toLowerCase().trim(\" \");\n    return items.filter(({ name }) =>\n      name.toLowerCase().includes(filterNormalize)\n    );\n  }\n);\n","import { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport toast from \"react-hot-toast\";\nimport Loader from \"react-loading\";\nimport { addContact } from \"../../redux/contacts/contacts-operations\";\nimport { getItems, getLoading } from \"../../redux/contacts/contacts-selectors\";\nimport s from \"./ContactForm.module.css\";\n\nfunction ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const isLoading = useSelector(getLoading);\n  // const [isAddBtnLoading, setIsAddBtnLoading] = useState(isLoading);\n\n  const nameId = useRef(\"\");\n  const numberId = useRef(\"\");\n\n  const currentContacts = useSelector(getItems);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    nameId.current = uuidv4();\n    numberId.current = uuidv4();\n  }, []);\n\n  const handleInputChange = (e) => {\n    switch (e.currentTarget.name) {\n      case \"name\":\n        setName(e.currentTarget.value);\n        break;\n\n      case \"number\":\n        setNumber(e.currentTarget.value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const toAddContact = (name, number) => {\n    dispatch(addContact(name, number));\n  };\n\n  const resetForm = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // setIsAddBtnLoading(!isLoading);\n\n    if (currentContacts.find((contact) => contact.name === name)) {\n      toast.error(`${name} is already in contacts.`);\n      return;\n    }\n\n    toAddContact(name, number);\n    resetForm();\n    // setTimeout(() => setIsAddBtnLoading(false), 20000);\n  };\n\n  return (\n    <form\n      className={s.form}\n      onSubmit={handleSubmit}\n      name=\"adding_contacts_form\"\n    >\n      <label className={s.label} htmlFor={nameId.current}>\n        Name\n      </label>\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={name}\n        id={nameId.current}\n        onChange={handleInputChange}\n      />\n\n      <label className={s.label} htmlFor={numberId.current}>\n        Number\n      </label>\n      <input\n        className={s.input}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        value={number}\n        id={numberId.current}\n        onChange={handleInputChange}\n      />\n\n      <div className={s.box}>\n        <button className={s.btn} type=\"submit\" disabled={isLoading}>\n          Add contact\n        </button>\n        {isLoading && (\n          <Loader\n            className={\"s.loader\"}\n            type={\"spinningBubbles\"}\n            color={\"#2b2626\"}\n            height={25}\n            width={25}\n          />\n        )}\n      </div>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { filterContacts } from \"../../redux/contacts/contacts-actions\";\nimport { getFilter } from \"../../redux/contacts/contacts-selectors\";\nimport s from \"./Filter.module.css\";\n\nfunction Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const filterInputId = uuidv4();\n\n  return (\n    <div className={s.filter}>\n      <label className={s.label} htmlFor={filterInputId}>\n        Find contacts by name:\n      </label>\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        id={filterInputId}\n        onChange={(event) =>\n          dispatch(filterContacts(event.currentTarget.value))\n        }\n        autoComplete=\"off\"\n      />\n    </div>\n  );\n}\n\nexport default Filter;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Loader from \"react-loading\";\nimport { getLoading } from \"../../redux/contacts/contacts-selectors\";\nimport { delContact } from \"../../redux/contacts/contacts-operations\";\nimport s from \"./ContactItem.module.css\";\n\nfunction ContactItem({ id, name, number }) {\n  const loading = useSelector(getLoading);\n  const [isBtnLoader, setIsBtnLoader] = useState(loading);\n\n  const dispatch = useDispatch();\n  const toDelContact = (id, name) => {\n    setIsBtnLoader(!loading);\n    dispatch(delContact(id, name));\n  };\n\n  return (\n    <li className={s.item}>\n      {name}: <span className={s.tel}>{number}</span>\n      {isBtnLoader && (\n        <Loader\n          className={\"s.loader\"}\n          type={\"spinningBubbles\"}\n          color={\"#2b2626\"}\n          height={15}\n          width={15}\n        />\n      )}\n      <button\n        className={s.btn}\n        onClick={() => {\n          toDelContact(id, name);\n        }}\n        type=\"button\"\n        disabled={isBtnLoader}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n","import { useSelector } from \"react-redux\";\nimport ContactItem from \"../ContactItem/ContactItem\";\nimport { getVisibleContacts } from \"../../redux/contacts/contacts-selectors\";\nimport s from \"./ContactsList.module.css\";\n\nfunction ContactsList() {\n  const visibleContacts = useSelector(getVisibleContacts);\n\n  return (\n    <ul className={s.list}>\n      {visibleContacts.map(({ id, name, number }) => (\n        <ContactItem key={id} id={id} name={name} number={number} />\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactsList;\n","import { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Loader from \"react-loading\";\nimport { Toaster } from \"react-hot-toast\";\n\nimport { fetchContacts } from \"./redux/contacts/contacts-operations\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactsList from \"./components/ContactsList/ContactsList.js\";\nimport {\n  getError,\n  getLoading,\n  getFilter,\n  getVisibleContacts,\n} from \"./redux/contacts/contacts-selectors\";\nimport \"./App.css\";\n\nfunction App() {\n  const visibleContacts = useSelector(getVisibleContacts);\n  const filter = useSelector(getFilter);\n  const isContactsLoading = useSelector(getLoading);\n  const Error = useSelector(getError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2 className=\"listTitle\">Contacts</h2>\n      <Filter />\n\n      {visibleContacts.length === 0 ? (\n        isContactsLoading ? (\n          <Loader\n            className={\"ContactsLoader\"}\n            type={\"spinningBubbles\"}\n            color={\"#2b2626\"}\n            height={80}\n            width={80}\n          />\n        ) : (\n          <p className=\"notifyText\">\n            {filter.length > 0\n              ? \"No results for your search\"\n              : \"No contacts yet\"}\n          </p>\n        )\n      ) : (\n        <ContactsList />\n      )}\n\n      {Error && <p className=\"notifyText\">{Error}</p>}\n\n      <Toaster\n        position=\"top-center\"\n        reverseOrder={true}\n        gutter={10}\n        toastOptions={{\n          className: \"Toaster\",\n          duration: 3000,\n          style: {\n            background: \"#363636\",\n            color: \"#fff\",\n          },\n        }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { createReducer, combineReducers } from \"@reduxjs/toolkit\";\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  delContactsRequest,\n  delContactsSuccess,\n  delContactsError,\n  filterContacts,\n} from \"./contacts-actions\";\n\nconst itemsReducer = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload.reverse(),\n  [addContactsSuccess]: (state, { payload }) => [payload, ...state],\n  [delContactsSuccess]: (state, { payload }) =>\n    state.filter((item) => item.id !== payload),\n});\n\nconst loadingReducer = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n\n  [addContactsRequest]: () => true,\n  [addContactsSuccess]: () => false,\n  [addContactsError]: () => false,\n\n  [delContactsRequest]: () => true,\n  [delContactsSuccess]: () => false,\n  [delContactsError]: () => false,\n});\n\nconst errorReducer = createReducer(null, {\n  [fetchContactsError]: (_, { payload }) => payload.message,\n\n  [addContactsError]: (_, { payload }) => payload.message,\n\n  [delContactsError]: (_, { payload }) => payload.message,\n});\n\nconst filterReducer = createReducer(\"\", {\n  [filterContacts]: (_, action) => action.payload,\n});\n\nconst contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n  loading: loadingReducer,\n  error: errorReducer,\n});\n\nexport default contactsReducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport contactsReducer from \"./contacts/contacts-reducer\";\n\nconst getMiddleware = (getDefaultMiddleware) =>\n  process.env.NODE_ENV === \"development\"\n    ? getDefaultMiddleware().concat(logger)\n    : getDefaultMiddleware();\n\n// const preloadedState = {\n//   contacts: {\n//     items: JSON.parse(localStorage.getItem(\"contacts\")) ?? [],\n//     filter: \"\",\n//   },\n// };\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  devTools: process.env.NODE_ENV === \"development\",\n  middleware: getMiddleware,\n  // preloadedState,\n});\n\nexport default store;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3cuYG\",\"input\":\"ContactForm_input__3T6LH\",\"label\":\"ContactForm_label__10R3X\",\"btn\":\"ContactForm_btn__jaIWc\",\"box\":\"ContactForm_box__tM6m7\"};"],"sourceRoot":""}