{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactItem/ContactItem.module.css","components/ContactsList/ContactsList.module.css","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","redux/contacts/contacts-actions.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactsList/ContactsList.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","then","data","toast","error","message","addContacts","contact","post","success","name","delContacts","delContact","delete","id","getItems","state","contacts","items","getFilter","filter","getLoading","loading","getVisibleContacts","createSelector","filterNormalize","toLowerCase","trim","includes","ContactForm","useState","setName","phone","setPhone","isLoading","useSelector","nameId","useRef","phoneId","currentContacts","dispatch","useDispatch","useEffect","current","uuidv4","handleInputChange","e","currentTarget","value","className","s","form","onSubmit","preventDefault","find","toAddContact","label","htmlFor","input","type","pattern","title","required","onChange","box","btn","disabled","color","height","width","filterContacts","createAction","Filter","filterInputId","event","autoComplete","ContactItem","isBtnLoader","setIsBtnLoader","item","tel","onClick","toDelContact","ContactsList","visibleContacts","list","map","App","isContactsLoading","length","position","reverseOrder","gutter","toastOptions","duration","style","background","itemsReducer","createReducer","fulfilled","payload","reverse","action","meta","arg","loadingReducer","pending","rejected","errorReducer","filterReducer","contactsReducer","combineReducers","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e0c7569.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__m09Qc\",\"label\":\"Filter_label__2TVyZ\",\"input\":\"Filter_input__1eTzD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__3veW5\",\"tel\":\"ContactItem_tel__3kUkN\",\"btn\":\"ContactItem_btn__2937y\",\"loader\":\"ContactItem_loader__kArjO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__2viaN\"};","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport toast from \"react-hot-toast\";\n\naxios.defaults.baseURL = \"https://618db362fe09aa0017440860.mockapi.io\";\n\nexport const fetchContacts = createAsyncThunk(\n  \"contacts/fetchContacts\",\n  async (_, { rejectWithValue }) => {\n    try {\n      return await axios.get(\"/contacts\").then(({ data }) => data);\n    } catch (error) {\n      toast.error(`Oops, ${error.message}.`);\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const addContacts = createAsyncThunk(\n  \"contacts/addContacts\",\n  async (contact, { rejectWithValue }) => {\n    try {\n      return await axios.post(\"/contacts\", contact).then(({ data }) => {\n        toast.success(`Contact ${contact.name} successfully added.`);\n        return data;\n      });\n    } catch (error) {\n      toast.error(`Oops, ${error.message}`);\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const delContacts = createAsyncThunk(\n  \"contacts/delContacts\",\n  async (delContact, { rejectWithValue }) => {\n    try {\n      await axios.delete(`/contacts/${delContact.id}`).then(() => {\n        toast.success(`Contact ${delContact.name} successfully deleted.`);\n      });\n    } catch (error) {\n      toast.error(`Oops, ${error.message}`);\n      return rejectWithValue(error);\n    }\n  }\n);\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getItems = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\nexport const getLoading = (state) => state.contacts.loading;\nexport const getError = (state) => state.contacts.error;\n\nexport const getVisibleContacts = createSelector(\n  [getItems, getFilter],\n  (items, filter) => {\n    const filterNormalize = filter.toLowerCase().trim(\" \");\n    return items.filter(({ name }) =>\n      name.toLowerCase().includes(filterNormalize)\n    );\n  }\n);\n","import { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport toast from \"react-hot-toast\";\nimport Loader from \"react-loading\";\nimport { addContacts } from \"../../redux/contacts/contacts-operations\";\nimport { getItems, getLoading } from \"../../redux/contacts/contacts-selectors\";\nimport s from \"./ContactForm.module.css\";\n\nfunction ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n\n  const isLoading = useSelector(getLoading);\n  // const [isAddBtnLoading, setIsAddBtnLoading] = useState(isLoading);\n\n  const nameId = useRef(\"\");\n  const phoneId = useRef(\"\");\n\n  const currentContacts = useSelector(getItems);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    nameId.current = uuidv4();\n    phoneId.current = uuidv4();\n  }, []);\n\n  const handleInputChange = (e) => {\n    switch (e.currentTarget.name) {\n      case \"name\":\n        setName(e.currentTarget.value);\n        break;\n\n      case \"phone\":\n        setPhone(e.currentTarget.value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const toAddContact = (name, phone) => {\n    const contact = {\n      name,\n      phone,\n    };\n    dispatch(addContacts(contact));\n  };\n\n  const resetForm = () => {\n    setName(\"\");\n    setPhone(\"\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // setIsAddBtnLoading(!isLoading);\n\n    if (currentContacts.find((contact) => contact.name === name)) {\n      toast.error(`${name} is already in contacts.`);\n      return;\n    }\n\n    toAddContact(name, phone);\n    resetForm();\n    // setTimeout(() => setIsAddBtnLoading(false), 20000);\n  };\n\n  return (\n    <form\n      className={s.form}\n      onSubmit={handleSubmit}\n      name=\"adding_contacts_form\"\n    >\n      <label className={s.label} htmlFor={nameId.current}>\n        Name\n      </label>\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={name}\n        id={nameId.current}\n        onChange={handleInputChange}\n      />\n\n      <label className={s.label} htmlFor={phoneId.current}>\n        Number\n      </label>\n      <input\n        className={s.input}\n        type=\"tel\"\n        name=\"phone\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        value={phone}\n        id={phoneId.current}\n        onChange={handleInputChange}\n      />\n\n      <div className={s.box}>\n        <button className={s.btn} type=\"submit\" disabled={isLoading}>\n          Add contact\n        </button>\n        {isLoading && (\n          <Loader\n            className={\"s.loader\"}\n            type={\"spinningBubbles\"}\n            color={\"#2b2626\"}\n            height={25}\n            width={25}\n          />\n        )}\n      </div>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const filterContacts = createAction(\"contacts/filter\");\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { filterContacts } from \"../../redux/contacts/contacts-actions\";\r\nimport { getFilter } from \"../../redux/contacts/contacts-selectors\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nfunction Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const filterInputId = uuidv4();\r\n\r\n  return (\r\n    <div className={s.filter}>\r\n      <label className={s.label} htmlFor={filterInputId}>\r\n        Find contacts by name:\r\n      </label>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        id={filterInputId}\r\n        onChange={(event) =>\r\n          dispatch(filterContacts(event.currentTarget.value))\r\n        }\r\n        autoComplete=\"off\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Loader from \"react-loading\";\nimport { getLoading } from \"../../redux/contacts/contacts-selectors\";\nimport { delContacts } from \"../../redux/contacts/contacts-operations\";\nimport s from \"./ContactItem.module.css\";\n\nfunction ContactItem({ id, name, phone }) {\n  const loading = useSelector(getLoading);\n  const [isBtnLoader, setIsBtnLoader] = useState(loading);\n\n  const dispatch = useDispatch();\n\n  const toDelContact = (id, name) => {\n    setIsBtnLoader(!loading);\n    dispatch(delContacts({ id, name }));\n  };\n\n  return (\n    <li className={s.item}>\n      {name}: <span className={s.tel}>{phone}</span>\n      {isBtnLoader && (\n        <Loader\n          className={\"s.loader\"}\n          type={\"spinningBubbles\"}\n          color={\"#2b2626\"}\n          height={15}\n          width={15}\n        />\n      )}\n      <button\n        className={s.btn}\n        onClick={() => {\n          toDelContact(id, name);\n        }}\n        type=\"button\"\n        disabled={isBtnLoader}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  phone: PropTypes.string,\n};\n","import { useSelector } from \"react-redux\";\nimport ContactItem from \"../ContactItem/ContactItem\";\nimport { getVisibleContacts } from \"../../redux/contacts/contacts-selectors\";\nimport s from \"./ContactsList.module.css\";\n\nfunction ContactsList() {\n  const visibleContacts = useSelector(getVisibleContacts);\n\n  return (\n    <ul className={s.list}>\n      {visibleContacts.map(({ id, name, phone }) => (\n        <ContactItem key={id} id={id} name={name} phone={phone} />\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactsList;\n","import { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Loader from \"react-loading\";\nimport { Toaster } from \"react-hot-toast\";\n\nimport { fetchContacts } from \"./redux/contacts/contacts-operations\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactsList from \"./components/ContactsList/ContactsList.js\";\nimport {\n  getLoading,\n  getFilter,\n  getVisibleContacts,\n} from \"./redux/contacts/contacts-selectors\";\nimport \"./App.css\";\n\nfunction App() {\n  const visibleContacts = useSelector(getVisibleContacts);\n  const filter = useSelector(getFilter);\n  const isContactsLoading = useSelector(getLoading);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2 className=\"listTitle\">Contacts</h2>\n      <Filter />\n\n      {visibleContacts.length === 0 ? (\n        isContactsLoading ? (\n          <Loader\n            className={\"ContactsLoader\"}\n            type={\"spinningBubbles\"}\n            color={\"#2b2626\"}\n            height={80}\n            width={80}\n          />\n        ) : (\n          <p className=\"notifyText\">\n            {filter.length > 0\n              ? \"No results for your search\"\n              : \"No contacts yet\"}\n          </p>\n        )\n      ) : (\n        <ContactsList />\n      )}\n\n      <Toaster\n        position=\"top-center\"\n        reverseOrder={true}\n        gutter={10}\n        toastOptions={{\n          className: \"Toaster\",\n          duration: 3000,\n          style: {\n            background: \"#363636\",\n            color: \"#fff\",\n          },\n        }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { createReducer, combineReducers } from \"@reduxjs/toolkit\";\nimport { filterContacts } from \"./contacts-actions\";\nimport { fetchContacts, addContacts, delContacts } from \"./contacts-operations\";\n\nconst itemsReducer = createReducer([], {\n  [fetchContacts.fulfilled]: (_, { payload }) => payload.reverse(),\n  [addContacts.fulfilled]: (state, { payload }) => [payload, ...state],\n  [delContacts.fulfilled]: (state, action) =>\n    state.filter((item) => item.id !== action.meta.arg.id),\n});\n\nconst loadingReducer = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n\n  [addContacts.pending]: () => true,\n  [addContacts.fulfilled]: () => false,\n  [addContacts.rejected]: () => false,\n\n  [delContacts.pending]: () => true,\n  [delContacts.fulfilled]: () => false,\n  [delContacts.rejected]: () => false,\n});\n\nconst errorReducer = createReducer(null, {\n  [fetchContacts.rejected]: (_, { payload }) => payload.message,\n  [fetchContacts.pending]: () => null,\n\n  [addContacts.rejected]: (_, { payload }) => payload.message,\n  [addContacts.pending]: () => null,\n\n  [delContacts.rejected]: (_, { payload }) => payload.message,\n  [delContacts.pending]: () => null,\n});\n\nconst filterReducer = createReducer(\"\", {\n  [filterContacts]: (_, action) => action.payload,\n});\n\nconst contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n  loading: loadingReducer,\n  error: errorReducer,\n});\n\nexport default contactsReducer;\n\n// const contactsSlice = createSlice({\n//   name: \"contacts\",\n\n//   initialState: {\n//     items: [],\n//     filter: \"\",\n//     loading: false,\n//     error: null,\n//   },\n\n//   reducers: {\n//     [filterContacts]: (state, action) => (state.filter = action.payload),\n//   },\n\n//   extraReducers: {\n//     [fetchContacts.fulfilled]: (state, { payload }) => {\n//       state.items.push(...payload);\n//       state.loading = false;\n//     },\n//     [fetchContacts.pending]: (state, _) => (state.loading = true),\n//     [fetchContacts.rejected]: (state, _) => (state.loading = false),\n//   },\n// });\n\n// export default contactsSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport contactsReducer from \"./contacts/contacts-reducer\";\n\nconst getMiddleware = (getDefaultMiddleware) =>\n  process.env.NODE_ENV === \"development\"\n    ? getDefaultMiddleware().concat(logger)\n    : getDefaultMiddleware();\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  devTools: process.env.NODE_ENV === \"development\",\n  middleware: getMiddleware,\n});\n\nexport default store;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3cuYG\",\"input\":\"ContactForm_input__3T6LH\",\"label\":\"ContactForm_label__10R3X\",\"btn\":\"ContactForm_btn__jaIWc\",\"box\":\"ContactForm_box__tM6m7\"};"],"sourceRoot":""}