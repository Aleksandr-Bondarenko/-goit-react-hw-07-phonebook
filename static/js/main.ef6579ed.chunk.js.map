{"version":3,"sources":["components/ContactItem/ContactItem.module.css","components/ContactsList/ContactsList.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactsList/ContactsList.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css"],"names":["module","exports","add","createAction","name","number","payload","id","uuidv4","del","filter","getItems","state","contacts","items","getFilter","getVisibleContacts","filterValue","contactsList","filterValueNormalize","toLowerCase","trim","includes","ContactForm","useState","setName","setNumber","nameId","useRef","numberId","currentContacts","useSelector","dispatch","useDispatch","useEffect","current","handleInputChange","e","currentTarget","value","className","s","form","onSubmit","preventDefault","find","contact","alert","actions","toAddContact","label","htmlFor","input","type","pattern","title","required","onChange","btn","Filter","filterInputId","event","autoComplete","ContactItem","toDelContact","item","tel","onClick","ContactsList","visibleContacts","list","map","App","localStorage","setItem","JSON","stringify","length","itemsReducer","createReducer","action","filterReducer","_","contactsReducer","combineReducers","preloadedState","parse","getItem","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef6579ed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__1L9mb\",\"tel\":\"ContactItem_tel__7m9bq\",\"btn\":\"ContactItem_btn__1NriN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__GvFDC\"};","import { v4 as uuidv4 } from \"uuid\";\nimport { createAction } from \"@reduxjs/toolkit\";\n// import actionTypes from \"./contacts-types\";\n\nexport const add = createAction(\"contacts/add\", (name, number) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\n\nexport const del = createAction(\"contacts/delete\");\nexport const filter = createAction(\"contacts/filter\");\n\n// Create actions with use Vanilla Redux (without Redux Toolkit)\n// export const add = (name, number) => ({\n//   type: actionTypes.ADD,\n//   payload: {\n//     id: uuidv4(),\n//     name,\n//     number,\n//   },\n// });\n\n// export const del = (id) => ({\n//   type: actionTypes.DEL,\n//   payload: id,\n// });\n\n// export const filter = (value) => ({\n//   type: actionTypes.FILTER,\n//   payload: value,\n// });\n","export const getItems = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = (state) => {\r\n  const filterValue = getFilter(state);\r\n  const contactsList = getItems(state);\r\n  const filterValueNormalize = filterValue.toLowerCase().trim(\" \");\r\n\r\n  return contactsList.filter(({ name }) =>\r\n    name.toLowerCase().includes(filterValueNormalize)\r\n  );\r\n};\r\n","import { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport * as actions from \"../../redux/contacts/contacts-actions\";\nimport { getItems } from \"../../redux/contacts/contacts-selectors\";\nimport s from \"./ContactForm.module.css\";\n\nfunction ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const nameId = useRef(\"\");\n  const numberId = useRef(\"\");\n\n  const currentContacts = useSelector(getItems);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    nameId.current = uuidv4();\n    numberId.current = uuidv4();\n  }, []);\n\n  const handleInputChange = (e) => {\n    switch (e.currentTarget.name) {\n      case \"name\":\n        setName(e.currentTarget.value);\n        break;\n\n      case \"number\":\n        setNumber(e.currentTarget.value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const toAddContact = (name, number) => dispatch(actions.add(name, number));\n\n  const resetForm = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (currentContacts.find((contact) => contact.name === name)) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    toAddContact(name, number);\n    resetForm();\n  };\n\n  return (\n    <form\n      className={s.form}\n      onSubmit={handleSubmit}\n      name=\"adding_contacts_form\"\n    >\n      <label className={s.label} htmlFor={nameId.current}>\n        Name\n      </label>\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={name}\n        id={nameId.current}\n        onChange={handleInputChange}\n      />\n\n      <label className={s.label} htmlFor={numberId.current}>\n        Number\n      </label>\n      <input\n        className={s.input}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        value={number}\n        id={numberId.current}\n        onChange={handleInputChange}\n      />\n\n      <button className={s.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport * as actions from \"../../redux/contacts/contacts-actions\";\nimport { getFilter } from \"../../redux/contacts/contacts-selectors\";\nimport s from \"./Filter.module.css\";\n\nfunction Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const filterInputId = uuidv4();\n\n  return (\n    <div className={s.filter}>\n      <label className={s.label} htmlFor={filterInputId}>\n        Find contacts by name:\n      </label>\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        id={filterInputId}\n        onChange={(event) =>\n          dispatch(actions.filter(event.currentTarget.value))\n        }\n        autoComplete=\"off\"\n      />\n    </div>\n  );\n}\n\nexport default Filter;\n","import PropTypes from \"prop-types\";\nimport s from \"./ContactItem.module.css\";\n\nfunction ContactItem({ id, name, number, toDelContact }) {\n  return (\n    <li className={s.item}>\n      {name}: <span className={s.tel}>{number}</span>\n      <button\n        className={s.btn}\n        onClick={() => {\n          toDelContact(id);\n        }}\n        type=\"button\"\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  toDelContact: PropTypes.func,\n};\n","import { useSelector, useDispatch } from \"react-redux\";\nimport ContactItem from \"../ContactItem/ContactItem\";\nimport * as actions from \"../../redux/contacts/contacts-actions\";\nimport { getVisibleContacts } from \"../../redux/contacts/contacts-selectors\";\nimport s from \"./ContactsList.module.css\";\n\nfunction ContactsList() {\n  const visibleContacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const toDelContact = (id) => dispatch(actions.del(id));\n\n  return (\n    <ul className={s.list}>\n      {visibleContacts.map(({ id, name, number }) => (\n        <ContactItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          toDelContact={toDelContact}\n        />\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactsList;\n","import { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactsList from \"./components/ContactsList/ContactsList.js\";\nimport {\n  getItems,\n  getFilter,\n  getVisibleContacts,\n} from \"./redux/contacts/contacts-selectors\";\nimport \"./App.css\";\n\nfunction App() {\n  const contacts = useSelector(getItems);\n  const visibleContacts = useSelector(getVisibleContacts);\n  const filter = useSelector(getFilter);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2 className=\"listTitle\">Contacts</h2>\n      <Filter />\n      {visibleContacts.length === 0 ? (\n        <p className=\"notifyText\">\n          {filter.length > 0 ? \"No results for your search\" : \"No contacts yet\"}\n        </p>\n      ) : (\n        <ContactsList />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { createReducer, combineReducers } from \"@reduxjs/toolkit\";\nimport * as actions from \"./contacts-actions\";\n// import { combineReducers } from \"redux\";\n// import actionTypes from \"./contacts-types\";\n\n// Option with use \"Map Object Notation\"\nconst itemsReducer = createReducer([], {\n  [actions.add]: (state, action) => [action.payload, ...state],\n  [actions.del]: (state, action) =>\n    state.filter((item) => item.id !== action.payload),\n});\n\nconst filterReducer = createReducer(\"\", {\n  [actions.filter]: (_, action) => action.payload,\n});\n\n// Option with use \"Builder Callback Notation\"\n\n// const itemsReducer = createReducer([], (builder) => {\n//   builder\n//     .addCase(actions.add, (state, action) => [action.payload, ...state])\n//     .addCase(actions.del, (state, action) =>\n//       state.filter((item) => item.id !== action.payload)\n//     );\n// });\n\n// const filterReducer = createReducer(\"\", (builder) => {\n//   builder\n//   .addCase(actions.filter, (state, action) => (action.payload))\n// });\n\nconst contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n\nexport default contactsReducer;\n\n// Create reducers with use Vanilla Redux (without Redux Toolkit)\n// const itemsReducer = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case actionTypes.ADD:\n//       return [payload, ...state];\n\n//     case actionTypes.DEL:\n//       return state.filter((item) => item.id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const filterReducer = (state = \"\", { type, payload }) => {\n//   switch (type) {\n//     case actionTypes.FILTER:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n","// import { createStore, combineReducers, applyMiddleware } from \"redux\";\n// import { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport contactsReducer from \"./contacts/contacts-reducer\";\n\n// const rootReducer = combineReducers({\n//   contacts: contactsReducer,\n// });\n\nconst getMiddleware = (getDefaultMiddleware) =>\n  process.env.NODE_ENV === \"development\"\n    ? getDefaultMiddleware().concat(logger)\n    : getDefaultMiddleware();\n\nconst preloadedState = {\n  contacts: {\n    items: JSON.parse(localStorage.getItem(\"contacts\")) ?? [],\n    filter: \"\",\n  },\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  devTools: process.env.NODE_ENV === \"development\",\n  middleware: getMiddleware,\n  preloadedState,\n});\n\n// const store = createStore(\n//   rootReducer,\n//   preloadedState,\n//   composeWithDevTools(applyMiddleware(logger))\n// );\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1ejIW\",\"input\":\"ContactForm_input__21RFx\",\"label\":\"ContactForm_label__Ez_8F\",\"btn\":\"ContactForm_btn__1cmr7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1nbtc\",\"label\":\"Filter_label__2d3RH\",\"input\":\"Filter_input__N2pb1\"};"],"sourceRoot":""}