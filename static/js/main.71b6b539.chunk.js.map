{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactItem/ContactItem.module.css","components/ContactsList/ContactsList.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactsList/ContactsList.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","inputNameId","uuidv4","inputNumberId","handleInputChange","e","currentTarget","value","setState","handleAddContact","preventDefault","addedContact","id","props","onSubmit","resetContactForm","this","className","s","form","label","htmlFor","input","type","pattern","title","required","onChange","btn","Component","Filter","filterInputId","filter","ContactItem","toDelContact","item","tel","onClick","ContactsList","contacts","list","map","App","onSubmitContactForm","data","find","contact","alert","handleContactsFilter","getVisibleContacts","filterNormalize","toLowerCase","includes","contactId","prevState","visibleContacts","length","handleClickDelContact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71b6b539.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1NAA4\",\"input\":\"ContactForm_input__3ZVlu\",\"label\":\"ContactForm_label__C_7aT\",\"btn\":\"ContactForm_btn__375OW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1ESpr\",\"label\":\"Filter_label__1FSOT\",\"input\":\"Filter_input__1vD--\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__pQZ-0\",\"tel\":\"ContactItem_tel__3wngr\",\"btn\":\"ContactItem_btn__1JPcz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__2nvMT\"};","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport s from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n    inputNameId: PropTypes.string,\n    inputNumberId: PropTypes.string,\n    handleAddContact: PropTypes.func,\n    handleInputChange: PropTypes.func,\n  };\n\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  inputNameId = uuidv4();\n  inputNumberId = uuidv4();\n\n  handleInputChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleAddContact = (e) => {\n    e.preventDefault();\n\n    const addedContact = {\n      id: uuidv4(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n\n    this.props.onSubmit(addedContact);\n    this.resetContactForm();\n  };\n\n  resetContactForm = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form\n        className={s.form}\n        onSubmit={this.handleAddContact}\n        name=\"adding_contacts_form\"\n      >\n        <label className={s.label} htmlFor={this.inputNameId}>\n          Name\n        </label>\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          id={this.inputNameId}\n          onChange={this.handleInputChange}\n        />\n\n        <label className={s.label} htmlFor={this.inputNumberId}>\n          Number\n        </label>\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          id={this.inputNumberId}\n          onChange={this.handleInputChange}\n        />\n\n        <button className={s.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\nexport default ContactForm;\n","import { v4 as uuidv4 } from \"uuid\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nfunction Filter({ onChange, value }) {\n  const filterInputId = uuidv4();\n\n  return (\n    <div className={s.filter}>\n      <label className={s.label} htmlFor={filterInputId}>\n        Find contacts by name:\n      </label>\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        id={filterInputId}\n        onChange={onChange}\n      />\n    </div>\n  );\n}\n\nexport default Filter;\n\nFilter.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n  filterInputId: PropTypes.string,\n};\n","import s from \"./ContactItem.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction ContactItem({ id, name, number, toDelContact }) {\n  return (\n    <li className={s.item}>\n      {name}: <span className={s.tel}>{number}</span>\n      <button\n        className={s.btn}\n        onClick={() => {\n          toDelContact(id);\n        }}\n        type=\"button\"\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  toDelContact: PropTypes.func,\n};\n","import ContactItem from \"../ContactItem/ContactItem\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactsList.module.css\";\n\nfunction ContactsList({ contacts, toDelContact }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          toDelContact={toDelContact}\n        />\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactsList;\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n  toDelContact: PropTypes.func,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactsList from \"./components/ContactsList/ContactsList.js\";\nimport \"./App.css\";\n\nclass App extends Component {\n  static propTypes = {\n    filter: PropTypes.number,\n    onSubmitContactForm: PropTypes.func,\n    handleContactsFilter: PropTypes.func,\n    handleClickDelContact: PropTypes.func,\n    visibleContacts: PropTypes.func,\n    toDelContact: PropTypes.func,\n  };\n\n  state = {\n    contacts: [],\n    filter: \"\",\n    // contacts: [\n    //   { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    //   { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    //   { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    //   { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    // ],\n  };\n\n  onSubmitContactForm = (data) => {\n    if (this.state.contacts.find((contact) => contact.name === data.name)) {\n      alert(`${data.name} is already in contacts.`);\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [data, ...contacts],\n      }));\n    }\n  };\n\n  handleContactsFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    // console.log(\"abcdef\".includes(\"\")); // Проверка\n    const { filter, contacts } = this.state;\n    const filterNormalize = filter.toLowerCase();\n    return contacts.filter((contact) => {\n      return contact.name.toLowerCase().includes(filterNormalize);\n    });\n  };\n\n  toDelContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => {\n        return contact.id !== contactId;\n      }),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.onSubmitContactForm} />\n        <h2 className=\"listTitle\">Contacts</h2>\n        <Filter onChange={this.handleContactsFilter} value={filter} />\n        {visibleContacts.length === 0 && filter.length > 0 ? (\n          <p className=\"notifyText\">No results for your search</p>\n        ) : (\n          <ContactsList\n            contacts={visibleContacts}\n            onClick={this.handleClickDelContact}\n            toDelContact={this.toDelContact}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}