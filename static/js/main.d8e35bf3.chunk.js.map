{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/ContactForm/ContactForm.module.css","redux/contacts/contacts-types.js","redux/contacts/contacts-reducer.js","redux/store.js","components/ContactForm/ContactForm.js","redux/contacts/contacts-actions.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactsList/ContactsList.js","App.js","index.js","components/Filter/Filter.module.css","components/ContactItem/ContactItem.module.css"],"names":["module","exports","contactsActionsTypes","ADD","DEL","FILTER","contactsReducer","combineReducers","items","state","type","payload","actionTypes","filter","item","id","rootReducer","contacts","preloadedState","JSON","parse","localStorage","getItem","store","createStore","composeWithDevTools","connect","dispatch","toAddContact","name","number","getState","find","toLowerCase","alert","uuidv4","actions","useState","setName","setNumber","nameId","useRef","numberId","useEffect","current","handleInputChange","e","currentTarget","value","className","s","form","onSubmit","preventDefault","label","htmlFor","input","pattern","title","required","onChange","btn","event","filterInputId","autoComplete","ContactItem","toDelContact","tel","onClick","getVisibleContacts","contactsList","filterValue","filterValueNormalize","trim","includes","length","list","map","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8e35bf3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__GvFDC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1ejIW\",\"input\":\"ContactForm_input__21RFx\",\"label\":\"ContactForm_label__Ez_8F\",\"btn\":\"ContactForm_btn__1cmr7\"};","const contactsActionsTypes = {\n  ADD: \"contacts/add\",\n  DEL: \"contacts/delete\",\n  FILTER: \"contacts/filter\",\n};\n\nexport default contactsActionsTypes;\n","import { combineReducers } from \"redux\";\nimport actionTypes from \"./contacts-types\";\n\nconst itemsReducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case actionTypes.ADD:\n      return [payload, ...state];\n\n    case actionTypes.DEL:\n      return state.filter((item) => item.id !== payload);\n\n    default:\n      return state;\n  }\n};\n\nconst filterReducer = (state = \"\", { type, payload }) => {\n  switch (type) {\n    case actionTypes.FILTER:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nconst contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n\nexport default contactsReducer;\n","import { createStore, combineReducers } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport contactsReducer from \"./contacts/contacts-reducer\";\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nconst preloadedState = {\n  contacts: {\n    items: JSON.parse(localStorage.getItem(\"contacts\")) ?? [],\n    filter: \"\",\n  },\n};\n\nconst store = createStore(rootReducer, preloadedState, composeWithDevTools());\n\nexport default store;\n","import { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport * as actions from \"../../redux/contacts/contacts-actions\";\nimport store from \"../../redux/store\";\n\nimport s from \"./ContactForm.module.css\";\n\nfunction ContactForm({ toAddContact }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const nameId = useRef(\"\");\n  const numberId = useRef(\"\");\n\n  useEffect(() => {\n    nameId.current = uuidv4();\n    numberId.current = uuidv4();\n  }, []);\n\n  const handleInputChange = (e) => {\n    switch (e.currentTarget.name) {\n      case \"name\":\n        setName(e.currentTarget.value);\n        break;\n\n      case \"number\":\n        setNumber(e.currentTarget.value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const resetForm = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    toAddContact(name, number);\n    resetForm();\n  };\n\n  return (\n    <form\n      className={s.form}\n      onSubmit={handleSubmit}\n      name=\"adding_contacts_form\"\n    >\n      <label className={s.label} htmlFor={nameId.current}>\n        Name\n      </label>\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={name}\n        id={nameId.current}\n        onChange={handleInputChange}\n      />\n\n      <label className={s.label} htmlFor={numberId.current}>\n        Number\n      </label>\n      <input\n        className={s.input}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        value={number}\n        id={numberId.current}\n        onChange={handleInputChange}\n      />\n\n      <button className={s.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  toAddContact: (name, number) => {\n    store\n      .getState()\n      .contacts.items.find(\n        (item) => item.name.toLowerCase() === name.toLowerCase()\n      )\n      ? alert(`${name} is already in contacts.`)\n      : dispatch(actions.add(name, number));\n  },\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n\nContactForm.propTypes = {\n  toAddContact: PropTypes.func,\n};\n","import { v4 as uuidv4 } from \"uuid\";\nimport actionTypes from \"./contacts-types\";\n\nexport const add = (name, number) => ({\n  type: actionTypes.ADD,\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n});\n\nexport const del = (id) => ({\n  type: actionTypes.DEL,\n  payload: id,\n});\n\nexport const filter = (value) => ({\n  type: actionTypes.FILTER,\n  payload: value,\n});\n","import { connect } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../../redux/contacts/contacts-actions\";\nimport s from \"./Filter.module.css\";\n\nfunction Filter({ onChange, value }) {\n  const filterInputId = uuidv4();\n\n  return (\n    <div className={s.filter}>\n      <label className={s.label} htmlFor={filterInputId}>\n        Find contacts by name:\n      </label>\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        id={filterInputId}\n        onChange={onChange}\n        autoComplete=\"off\"\n      />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (event) => dispatch(actions.filter(event.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n};\n","import PropTypes from \"prop-types\";\nimport s from \"./ContactItem.module.css\";\n\nfunction ContactItem({ id, name, number, toDelContact }) {\n  return (\n    <li className={s.item}>\n      {name}: <span className={s.tel}>{number}</span>\n      <button\n        className={s.btn}\n        onClick={() => {\n          toDelContact(id);\n        }}\n        type=\"button\"\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  toDelContact: PropTypes.func,\n};\n","import { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport ContactItem from \"../ContactItem/ContactItem\";\nimport * as actions from \"../../redux/contacts/contacts-actions\";\nimport s from \"./ContactsList.module.css\";\n\nfunction ContactsList({ contacts, filter, toDelContact }) {\n  return contacts.length === 0 ? (\n    <p className=\"notifyText\">\n      {filter.length > 0 ? \"No results for your search\" : \"No contacts yet\"}\n    </p>\n  ) : (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          toDelContact={toDelContact}\n        />\n      ))}\n    </ul>\n  );\n}\n\nconst getVisibleContacts = (contactsList, filterValue) => {\n  const filterValueNormalize = filterValue.toLowerCase().trim(\" \");\n  return contactsList.filter(({ name }) =>\n    name.toLowerCase().includes(filterValueNormalize)\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { filter, items } = state.contacts;\n\n  return {\n    filter: state.contacts.filter,\n    contacts: getVisibleContacts(items, filter),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  toDelContact: (id) => dispatch(actions.del(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n\nContactsList.propTypes = {\n  contacts: PropTypes.array,\n  filter: PropTypes.string,\n};\n","import { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactsList from \"./components/ContactsList/ContactsList.js\";\nimport \"./App.css\";\n\nfunction App({ contacts }) {\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2 className=\"listTitle\">Contacts</h2>\n      <Filter />\n      <ContactsList />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contacts.items,\n  filter: state.contacts.filter,\n});\n\nexport default connect(mapStateToProps)(App);\n\nApp.propTypes = {\n  contacts: PropTypes.array,\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1nbtc\",\"label\":\"Filter_label__2d3RH\",\"input\":\"Filter_input__N2pb1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__1L9mb\",\"tel\":\"ContactItem_tel__7m9bq\",\"btn\":\"ContactItem_btn__1NriN\"};"],"sourceRoot":""}