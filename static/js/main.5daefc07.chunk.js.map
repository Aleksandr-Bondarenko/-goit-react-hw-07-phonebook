{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactItem/ContactItem.module.css","components/ContactsList/ContactsList.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactsList/ContactsList.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","inputNameId","uuidv4","inputNumberId","handleInputChange","e","currentTarget","value","setState","handleAddContact","preventDefault","addedContact","id","props","onSubmit","resetContactForm","this","className","s","form","label","htmlFor","input","type","pattern","title","required","onChange","btn","Component","Filter","filterInputId","filter","ContactItem","toDelContact","item","tel","onClick","ContactsList","contacts","list","map","App","getSavedContacts","localStorage","getItem","setItem","JSON","stringify","parse","onSubmitContactForm","data","find","contact","alert","handleContactsFilter","getVisibleContacts","filterNormalize","toLowerCase","includes","contactId","prevState","console","log","visibleContacts","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5daefc07.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3LPLy\",\"input\":\"ContactForm_input__QGP2n\",\"label\":\"ContactForm_label__1fNLq\",\"btn\":\"ContactForm_btn__3IIVn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__G6WDe\",\"label\":\"Filter_label__6bmLo\",\"input\":\"Filter_input__J0tWf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__2HFJu\",\"tel\":\"ContactItem_tel__1y6Mw\",\"btn\":\"ContactItem_btn__1mtce\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__J2vrr\"};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func,\r\n  };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  inputNameId = uuidv4();\r\n  inputNumberId = uuidv4();\r\n\r\n  handleInputChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleAddContact = (e) => {\r\n    e.preventDefault();\r\n\r\n    const addedContact = {\r\n      id: uuidv4(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n\r\n    this.props.onSubmit(addedContact);\r\n    this.resetContactForm();\r\n  };\r\n\r\n  resetContactForm = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form\r\n        className={s.form}\r\n        onSubmit={this.handleAddContact}\r\n        name=\"adding_contacts_form\"\r\n      >\r\n        <label className={s.label} htmlFor={this.inputNameId}>\r\n          Name\r\n        </label>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          id={this.inputNameId}\r\n          onChange={this.handleInputChange}\r\n        />\r\n\r\n        <label className={s.label} htmlFor={this.inputNumberId}>\r\n          Number\r\n        </label>\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          id={this.inputNumberId}\r\n          onChange={this.handleInputChange}\r\n        />\r\n\r\n        <button className={s.btn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default ContactForm;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nfunction Filter({ onChange, value }) {\r\n  const filterInputId = uuidv4();\r\n\r\n  return (\r\n    <div className={s.filter}>\r\n      <label className={s.label} htmlFor={filterInputId}>\r\n        Find contacts by name:\r\n      </label>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        id={filterInputId}\r\n        onChange={onChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func,\r\n  value: PropTypes.string,\r\n};\r\n","import s from \"./ContactItem.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ContactItem({ id, name, number, toDelContact }) {\r\n  return (\r\n    <li className={s.item}>\r\n      {name}: <span className={s.tel}>{number}</span>\r\n      <button\r\n        className={s.btn}\r\n        onClick={() => {\r\n          toDelContact(id);\r\n        }}\r\n        type=\"button\"\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ContactItem;\r\n\r\nContactItem.propTypes = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  toDelContact: PropTypes.func,\r\n};\r\n","import ContactItem from \"../ContactItem/ContactItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactsList.module.css\";\r\n\r\nfunction ContactsList({ contacts, toDelContact }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactItem\r\n          key={id}\r\n          id={id}\r\n          name={name}\r\n          number={number}\r\n          toDelContact={toDelContact}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ContactsList;\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ContactForm from \"./components/ContactForm/ContactForm\";\r\nimport Filter from \"./components/Filter/Filter\";\r\nimport ContactsList from \"./components/ContactsList/ContactsList.js\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n    // contacts: [\r\n    //   { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n    //   { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n    //   { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n    //   { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    // ],\r\n  };\r\n\r\n  getSavedContacts = () => {\r\n    if (localStorage.getItem(\"contacts\") === null) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify([]));\r\n    }\r\n    return JSON.parse(localStorage.getItem(\"contacts\"));\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(\"ComponentDidMount-read contacts from LocalStorage\");\r\n    console.log(this.getSavedContacts());\r\n    if (this.getSavedContacts()) {\r\n      this.setState({ contacts: this.getSavedContacts() });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(\"ComponentDidUpdate - rewrite LocalStorage\");\r\n    localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n  }\r\n\r\n  onSubmitContactForm = (data) => {\r\n    if (this.state.contacts.find((contact) => contact.name === data.name)) {\r\n      alert(`${data.name} is already in contacts.`);\r\n    } else {\r\n      this.setState(({ contacts }) => ({\r\n        contacts: [data, ...contacts],\r\n      }));\r\n    }\r\n  };\r\n\r\n  handleContactsFilter = (e) => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    // console.log(\"abcdef\".includes(\"\")); // Проверка\r\n    const { filter, contacts } = this.state;\r\n    const filterNormalize = filter.toLowerCase();\r\n    return contacts.filter((contact) => {\r\n      return contact.name.toLowerCase().includes(filterNormalize);\r\n    });\r\n  };\r\n\r\n  toDelContact = (contactId) => {\r\n    this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter((contact) => {\r\n        return contact.id !== contactId;\r\n      }),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmit={this.onSubmitContactForm} />\r\n        <h2 className=\"listTitle\">Contacts</h2>\r\n        <Filter onChange={this.handleContactsFilter} value={filter} />\r\n        {visibleContacts.length === 0 ? (\r\n          <p className=\"notifyText\">\r\n            {filter.length > 0\r\n              ? \"No results for your search\"\r\n              : \"No contacts yet\"}\r\n          </p>\r\n        ) : (\r\n          <ContactsList\r\n            contacts={visibleContacts}\r\n            toDelContact={this.toDelContact}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}